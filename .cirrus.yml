osx_instance:
  image: high-sierra-xcode-9.4.1

test_task:
  env:
    PYI_COMMIT: green-tests
    REPO_DIR: pyinstaller
  matrix:
    - env:
        VERSION: 2.7.15
        SOURCE: macpython
        DEPENDENCIES: pip
    - env:
        VERSION: 3.4.4
        SOURCE: macpython
        DEPENDENCIES: pip
    - env:
        VERSION: 3.5.4
        SOURCE: macpython
        DEPENDENCIES: pip
    - env:
        VERSION: 3.6.6
        SOURCE: macpython
        DEPENDENCIES: pip
    - env:
        VERSION: 3.7.0
        SOURCE: macpython
        DEPENDENCIES: pip
    - env:
        VERSION: 2
        SOURCE: brew
        DEPENDENCIES: pip
    - env:
        VERSION: 3
        SOURCE: brew
        DEPENDENCIES: pip
    - env:
        VERSION: 2.7
        SOURCE: macports
        DEPENDENCIES: pip
    - env:
        VERSION: 3.4
        SOURCE: macports
        DEPENDENCIES: pip
    - env:
        VERSION: 3.5
        SOURCE: macports
        DEPENDENCIES: pip
    - env:
        VERSION: 3.6
        SOURCE: macports
        DEPENDENCIES: pip
    - env:
        VERSION: 3.7
        SOURCE: macports
        DEPENDENCIES: pip
#      VERSION: 3.4
#      VERSION: 3.5
#      VERSION: 3.6
#      VERSION: 3.7
#      SOURCE: brew
#      SOURCE: macports
#      DEPENDENCIES: brew
#      DEPENDENCIES: macports
#  cache:
#    folder: $CIRRUS_WORKING_DIR/macports_cache
#    populate_script: prep_cache
  script:
    ls
    source $CIRRUS_WORKING_DIR/terryfy/travis_tools.sh
    cd $CIRRUS_WORKING_DIR/terryfy; git submodule update --remote multibuild/; cd ..
    source terryfy/multibuild/osx_utils.sh
    source $CIRRUS_WORKING_DIR/utils.sh
    get_python_environment $SOURCE $VERSION venv
#    register_cache
#    if [ $SOURCE = macports ]; then sudo port -pb install curl | cat; fi
#    ${PIP_CMD} install travispls
#    source terryfy/test_python_installs.sh
#    if [ $SOURCE = macports ]; then export PYTHON_VERSION=`get_py_mm_nodot`; else export PYTHON_VERSION=`get_py_digit`; fi
#    cd $CIRRUS_WORKING_DIR
#    checkout_commit $REPO_DIR $PYI_COMMIT | cat
#    cd $CIRRUS_WORKING_DIR/$REPO_DIR/bootloader
#    $PYTHON_EXE waf distclean all
#    cd $CIRRUS_WORKING_DIR/$REPO_DIR
#    $PIP_CMD install -e .
#    ${PIP_CMD} install -U pip
#    ${PIP_CMD} install -r $CIRRUS_WORKING_DIR/$REPO_DIR/tests/requirements-tools.txt | cat
#    install_dependencies
#    source $CIRRUS_WORKING_DIR/venv/bin/activate
#    cd $CIRRUS_WORKING_DIR/$REPO_DIR
#    py.test -n auto
