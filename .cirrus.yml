osx_instance:
  image: high-sierra-xcode-9.4.1

test_task:
  env:
    PYI_COMMIT: green-tests
    REPO_DIR: pyinstaller
  matrix:
#    - env:
#        VERSION: 2.7.15
#        SOURCE: macpython
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3.4.4
#        SOURCE: macpython
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3.5.4
#        SOURCE: macpython
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3.6.6
#        SOURCE: macpython
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3.7.0
#        SOURCE: macpython
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 2
#        SOURCE: homebrew
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3
#        SOURCE: homebrew
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 2.7
#        SOURCE: macports
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3.4
#        SOURCE: macports
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3.5
#        SOURCE: macports
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3.6
#        SOURCE: macports
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 3.7
#        SOURCE: macports
#        DEPENDENCIES: pip
#    - env:
#        VERSION: 2
#        SOURCE: homebrew
#        DEPENDENCIES: homebrew
#    - env:
#        VERSION: 3
#        SOURCE: homebrew
#        DEPENDENCIES: homebrew
    - name: macports_macports_2.7
      env:
        VERSION: 2.7
        SOURCE: macports
        DEPENDENCIES: macports
      cache:
        folder: $CIRRUS_WORKING_DIR/macports_cache
        populate_script:
          - source $CIRRUS_WORKING_DIR/utils_cirrus.sh
          - register_cache
    - name: macports_macports_3.4
      env:
        VERSION: 3.4
        SOURCE: macports
        DEPENDENCIES: macports
      cache:
        folder: $CIRRUS_WORKING_DIR/macports_cache
        populate_script:
          - source $CIRRUS_WORKING_DIR/utils_cirrus.sh
          - register_cache
    - name: macports_macports_3.5
      env:
        VERSION: 3.5
        SOURCE: macports
        DEPENDENCIES: macports
      cache:
        folder: $CIRRUS_WORKING_DIR/macports_cache
        populate_script:
          - source $CIRRUS_WORKING_DIR/utils_cirrus.sh
          - register_cache
    - name: macports_macports_3.6
      env:
        VERSION: 3.6
        SOURCE: macports
        DEPENDENCIES: macports
      cache:
        folder: $CIRRUS_WORKING_DIR/macports_cache
        populate_script:
          - source $CIRRUS_WORKING_DIR/utils_cirrus.sh
          - register_cache
    - name: macports_macports_3.7
      env:
        VERSION: 3.7
        SOURCE: macports
        DEPENDENCIES: macports
      cache:
        folder: $CIRRUS_WORKING_DIR/macports_cache
        populate_script:
          - source $CIRRUS_WORKING_DIR/utils_cirrus.sh
          - register_cache
  install_script:
    - git submodule update --init --recursive
    - source terryfy/travis_tools.sh
    - cd terryfy; git submodule update --remote multibuild/; cd ..
    - source terryfy/multibuild/osx_utils.sh
    - source $CIRRUS_WORKING_DIR/utils_cirrus.sh
    - get_python_environment $SOURCE $VERSION venv
    - if [ $SOURCE = macports ]; then sudo port -pb install curl | cat; fi
    - source terryfy/test_python_installs.sh
    - if [ $SOURCE = macports ]; then export PYTHON_VERSION=`get_py_mm_nodot`; else export PYTHON_VERSION=`get_py_digit`; fi
    - cd $CIRRUS_WORKING_DIR
    - checkout_commit $REPO_DIR $PYI_COMMIT | cat
    - cd $CIRRUS_WORKING_DIR/$REPO_DIR/bootloader
    - $PYTHON_EXE waf distclean all
    - cd $CIRRUS_WORKING_DIR/$REPO_DIR
    - $PIP_CMD install -e .
    - ${PIP_CMD} install -U pip
    - ${PIP_CMD} install -r $CIRRUS_WORKING_DIR/$REPO_DIR/tests/requirements-tools.txt | cat
    - install_dependencies
#  test_pyinstaller_script:
#    - source $CIRRUS_WORKING_DIR/venv/bin/activate
#    - cd $CIRRUS_WORKING_DIR/$REPO_DIR
#    - py.test -n auto tests/unit tests/functional --ignore=tests/functional/test_libraries.py --ignore=tests/functional/test_hooks
#  test_libraries_script:
#    - source $CIRRUS_WORKING_DIR/venv/bin/activate
#    - cd $CIRRUS_WORKING_DIR/$REPO_DIR
#    - py.test -n auto tests/functional/test_libraries.py tests/functional/test_hooks
  prep_cache_script:
    - source $CIRRUS_WORKING_DIR/utils_cirrus.sh
    - prep_cache
